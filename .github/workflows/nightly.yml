name: Nightly Build

on:
  [push]
  # schedule:
  #   - cron: "0 4 * * *"
env:
  flutter_channel: "dev"
  java_version: "12.x"

jobs:
  build:
    name: build and upload nightly
    runs-on: macos-latest
    steps:
      - name: 检查
        uses: actions/checkout@v1

      - name: 读取缓存
        uses: actions/cache@v1
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_channel }}

      - name: 配置Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "dev"

      - name: 执行flutter pub get
        run: flutter pub get

      - name: 启用macos,windows,linux
        run: flutter config --enable-macos-desktop --enable-windows-desktop --enable-linux-desktop

      - name: 编译macos版
        run: flutter build macos --release
      - name: 编译windows版
        run: flutter build windows --release
      - name: 打包windows版到zip
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r build/windows/x64/Release/windows-x64.zip build/windows/x64/Release/Runner/
      - name: 编译android版
        run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64 --split-per-abi --shrink

      - name: 获取当前时间
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYY/MM/DD

      - name: 上传至release
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          name: "每夜编译_${{steps.current-time.outputs.formattedTime}}"
          tag: "Nightly_${{steps.current-time.outputs.formattedTime}}"
          body: "每天编译一次的版本。\napk结尾为android版。\napp结尾为mac os版。\nzip结尾为windows版，解压后即可使用"
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "build/macos/Build/Products/Release/*.app,build/app/outputs/apk/release/*.apk,build/windows/x64/Release/windows-x64.zip"
    # build:
    # name: build and upload nightly
    # runs-on: ubuntu-latest
    # timeout-minutes: 25
    # steps:
    #   - name: checkout
    #     uses: actions/checkout@v1
    #   - name: java env
    #     uses: actions/setup-java@v1
    #     with:
    #       java-version: "12.x"
    #   - name: cache flutter dependencies
    #     uses: actions/cache@v1
    #     with:
    #       path: /opt/hostedtoolcache/flutter
    #       key: ${{ runner.OS }}-flutter-install-cache-${{ env.flutter_channel }}
    #   - name: flutter env
    #     uses: subosito/flutter-action@v1
    #     with:
    #       channel: "dev"
    #   - name: install dependencies
    #     run: flutter pub get
    #   - name: build android
    #     run: flutter build apk --release --target-platform android-arm,android-arm64,android-x64 --split-per-abi --shrink
    #   - name: get current date
    #     id: date
    #     run: echo "::set-output name=date::$(date +'%Y/%m/%d-%H:%M')"
    #   - name: upload to release
    #     uses: ncipollo/release-action@v1
    #     with:
    #       prerelease: true
    #       # draft: true
    #       body: "Android每夜编译版${{steps.date.outputs.date}}\n虚拟机运行请用app-x86_64-release.apk\n暂不进行Linux|Windows|Mac os|iOS每夜编译"
    #       name: "Android 每夜构建 ${{steps.date.outputs.date}}"
    #       tag: "android-nightly_${{steps.date.outputs.date}}"
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       artifacts: "build/app/outputs/apk/release/*.apk"
